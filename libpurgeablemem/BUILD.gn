# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/ohos/ndk/ndk.gni")

config("libpurgeable_config") {
  include_dirs = [
    "c/include",
    "common/include",
    "cpp/include",
    "interfaces/kits/c",
  ]
  cflags_cc = [ "-fexceptions" ]
}

ohos_shared_library("libpurgeablemem") {
  sources = [
    "c/src/purgeable_mem_builder_c.c",
    "c/src/purgeable_mem_c.c",
    "c/src/purgeable_memory.c",
    "common/src/pm_state_c.c",
    "common/src/ux_page_table_c.c",
    "cpp/src/purgeable_ashmem.cpp",
    "cpp/src/purgeable_mem.cpp",
    "cpp/src/purgeable_mem_base.cpp",
    "cpp/src/purgeable_mem_builder.cpp",
    "cpp/src/ux_page_table.cpp",
  ]
  include_dirs = [ "include" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
  ]
  public_configs = [ ":libpurgeable_config" ]
  subsystem_name = "commonlibrary"
  part_name = "memory_utils"

  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  branch_protector_ret = "pac_ret"
}

ohos_shared_library("purgeable_memory_ndk") {
  include_dirs = [ "interfaces/kits/c" ]

  sources = [ "c/src/purgeable_memory.c" ]
  deps = [ ":libpurgeablemem" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]

  relative_install_dir = "ndk"
  subsystem_name = "commonlibrary"
  part_name = "memory_utils"

  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  branch_protector_ret = "pac_ret"
}
